/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: run_mode.proto */

#ifndef PROTOBUF_C_run_5fmode_2eproto__INCLUDED
#define PROTOBUF_C_run_5fmode_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "msg_enum.pb-c.h"

typedef struct _RunMode RunMode;


/* --- enums --- */

typedef enum _RunMode__Mode {
  RUN_MODE__MODE__IDLE = 0,
  RUN_MODE__MODE__AUTO = 1,
  RUN_MODE__MODE__TELEOP = 2,
  RUN_MODE__MODE__ESTOP = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RUN_MODE__MODE)
} RunMode__Mode;

/* --- messages --- */

struct  _RunMode
{
  ProtobufCMessage base;
  /*
   *should be RUN_MODE (2)
   */
  Msg msg;
  RunMode__Mode mode;
};
#define RUN_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&run_mode__descriptor) \
    , MSG__GAMEPAD_STATE, RUN_MODE__MODE__IDLE }


/* RunMode methods */
void   run_mode__init
                     (RunMode         *message);
size_t run_mode__get_packed_size
                     (const RunMode   *message);
size_t run_mode__pack
                     (const RunMode   *message,
                      uint8_t             *out);
size_t run_mode__pack_to_buffer
                     (const RunMode   *message,
                      ProtobufCBuffer     *buffer);
RunMode *
       run_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   run_mode__free_unpacked
                     (RunMode *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RunMode_Closure)
                 (const RunMode *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor run_mode__descriptor;
extern const ProtobufCEnumDescriptor    run_mode__mode__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_run_5fmode_2eproto__INCLUDED */
