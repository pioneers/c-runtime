/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gamepad.proto */

#ifndef PROTOBUF_C_gamepad_2eproto__INCLUDED
#define PROTOBUF_C_gamepad_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
#error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
#error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _GpState GpState;


/* --- enums --- */


/* --- messages --- */

struct _GpState {
    ProtobufCMessage base;
    protobuf_c_boolean connected;
    uint32_t buttons;
    size_t n_axes;
    float* axes;
};
#define GP_STATE__INIT                                 \
    {                                                  \
        PROTOBUF_C_MESSAGE_INIT(&gp_state__descriptor) \
        , 0, 0, 0, NULL                                \
    }


/* GpState methods */
void gp_state__init(GpState* message);
size_t gp_state__get_packed_size(const GpState* message);
size_t gp_state__pack(const GpState* message,
                      uint8_t* out);
size_t gp_state__pack_to_buffer(const GpState* message,
                                ProtobufCBuffer* buffer);
GpState*
gp_state__unpack(ProtobufCAllocator* allocator,
                 size_t len,
                 const uint8_t* data);
void gp_state__free_unpacked(GpState* message,
                             ProtobufCAllocator* allocator);
/* --- per-message closures --- */

typedef void (*GpState_Closure)(const GpState* message,
                                void* closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor gp_state__descriptor;

PROTOBUF_C__END_DECLS


#endif /* PROTOBUF_C_gamepad_2eproto__INCLUDED */
